{"version":3,"sources":["index.js"],"names":["Average","props","_this","Object","_Users_serwis_Documents_GitHub_kalkulator_spalania_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_serwis_Documents_GitHub_kalkulator_spalania_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_serwis_Documents_GitHub_kalkulator_spalania_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","fuel","km","cost","sum","changeStateFuel","bind","_Users_serwis_Documents_GitHub_kalkulator_spalania_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","changeStateKm","changeStateCost","calculate","event","setState","target","value","Number","toFixed","roadcost","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","type","onChange","onClick","React","Component","Cost","_this2","fuelc","kmc","costc","costChangeStateFuel","costChangeStateKm","costChangeStateCost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b8da106.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Average extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            fuel: null,\n            km: null,\n            cost: null,\n            sum: null\n        };\n        this.changeStateFuel = this.changeStateFuel.bind(this)\n        this.changeStateKm = this.changeStateKm.bind(this)\n        this.changeStateCost = this.changeStateCost.bind(this)\n        this.calculate= this.calculate.bind(this)\n    }\n\n    changeStateFuel(event) {\n        this.setState({\n            fuel: event.target.value\n        })\n      };\n    changeStateKm(event) {\n        this.setState({\n            km: event.target.value\n        })\n    };\n    changeStateCost(event) {\n        this.setState({\n            cost: event.target.value\n        })\n    }\n    calculate(){\n        this.setState({\n            sum: ((Number(this.state.fuel) / Number(this.state.km)) * 100).toFixed(1),\n            roadcost: (((Number(this.state.fuel) / Number(this.state.km)) * 100) * Number(this.state.cost)).toFixed(2)\n        })\n    }\n\n    render(){\n    return(\n        <div>\n            <h1>Kalkulator średniego spalania na 100 km</h1>\n            <p>Spalone paliwo w litrach: <input type=\"number\" fuel={this.state.value}\n            onChange={this.changeStateFuel}/></p>\n            <p>Ilość przejechanych kilometrów: <input type=\"number\" km={this.state.value}\n            onChange={this.changeStateKm}/></p>\n            <p>Cena litra paliwa (opcjonalne): <input type=\"number\"  cost={this.state.value}\n            onChange={this.changeStateCost}/></p>\n            <button onClick={this.calculate}>Oblicz</button>\n            <output>\n                <p>Ilość spalonego paliwa: <output>{this.state.sum}</output>l.</p>\n                <p>Koszt spalonego paliwa: <output>{this.state.roadcost}</output>zł.</p>\n            </output>\n        </div>\n        );\n    }\n}\n\nclass Cost extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            fuelc: null,\n            kmc: null,\n            costc: null,\n            sum: null,\n        };\n        this.costChangeStateFuel = this.costChangeStateFuel.bind(this)\n        this.costChangeStateKm = this.costChangeStateKm.bind(this)\n        this.costChangeStateCost = this.costChangeStateCost.bind(this)\n        this.calculate = this.calculate.bind(this)\n    }\n\n    costChangeStateFuel(event) {\n        this.setState({\n            fuelc: event.target.value\n        })\n        };\n    costChangeStateKm(event) {\n        this.setState({\n            kmc: event.target.value\n        })\n    };\n    costChangeStateCost(event) {\n        this.setState({\n            costc: event.target.value\n        })\n    }\n\n    calculate(){\n        this.setState({\n            sum: (((100 * Number(this.state.fuelc)) / 100) * Number(this.state.costc)).toFixed(2),\n            roadcost: (((Number(this.state.kmc) * Number(this.state.fuelc)) / 100) * Number(this.state.costc)).toFixed(2)\n        })\n    }\n    \n    render(){\n    return(\n        <div>\n            <h1>Kalkulator kosztu przejechania trasy</h1>\n            <p>Długość planowanej trasy w kilometrach: <input type=\"number\" kmc={this.state.value}\n            onChange={this.costChangeStateKm}/></p>\n            <p>Średnie spalanie w litrach na 100 km: <input type=\"number\" fuelc={this.state.value}\n            onChange={this.costChangeStateFuel}/></p>\n            <p>Cena litra paliwa: <input type=\"number\" costc={this.state.value}\n            onChange={this.costChangeStateCost}/></p>\n            <button onClick={this.calculate}>Oblicz</button>\n            <output>\n                <p>Koszt przejechania 100 km:{this.state.sum}</p>\n                <p>Koszt przejechania {this.state.kmc} km: {this.state.roadcost}</p>\n            </output>\n            <Average />\n        </div>\n        ); \n    }\n}\n\n\nReactDOM.render(<Cost />, document.getElementById('root'));"],"sourceRoot":""}